%define kmod_name		%{MODULE_NAME}
%define kmod_vendor		%{MODULE_VENDOR}
%define kmod_driver_version	%{MODULE_VERSION}
%define kmod_rpm_release	%{MODULE_RPM_RELEASE}
%define kmod_kernel_version	%{KERNEL_VERSION}
%define kmod_kbuild_dir		%{MODULE_BUILD_DIR}

%{!?dist: %define dist .%{RPM_DIST}}

Source0:	%{kmod_name}-%{kmod_vendor}-%{kmod_driver_version}.tar.bz2
%{SOURCE_PATCHES}

%define findpat %( echo "%""P" )
%define __find_requires /usr/lib/rpm/redhat/find-requires.ksyms
%define __find_provides /usr/lib/rpm/redhat/find-provides.ksyms %{kmod_name} %{?epoch:%{epoch}:}%{version}-%{release}

Name:		%{RPM_NAME}
Version:	%{kmod_driver_version}
Release:	%{kmod_rpm_release}%{?dist}
Summary:	%{SUMMARY}
Group:		System/Kernel
License:	GPLv2
URL:		http://www.kernel.org/
BuildRoot:	%(mktemp -ud %{_tmppath}/%{name}-%{version}-%{release}-XXXXXX)
BuildRequires:	kernel-devel = %kmod_kernel_version kmod redhat-rpm-config kernel-abi-whitelists
ExclusiveArch:	%{KERNEL_ARCH}
%global kernel_source() /usr/src/kernels/%{kmod_kernel_version}.$(arch)

%global _use_internal_dependency_generator 0
Provides:	kernel-modules = %kmod_kernel_version
Provides:	%{kmod_name}-kmod = %{?epoch:%{epoch}:}%{version}-%{release}
Requires(post):	/usr/sbin/depmod
Requires(postun):	/usr/sbin/depmod
%{KERNEL_REQUIRES}
%{MODULE_REQUIRES}
# if there are multiple kmods for the same driver from different vendors,
# they should coflict with each other.
Conflicts:	%{kmod_name}-kmod

%description
%{DESCRIPTION}
%{FIRMWARE_BEGIN}

%package -n %{RPM_NAME}-firmware
Version:	%{FIRMWARE_VERSION}
Summary:	%{FIRMWARE_SUMMARY}
Provides:	firmware(%{kmod_name}) = %{kmod_firmware_version}
Provides:	kernel-modules = %{kmod_kernel_version}.%{_target_cpu}
%description -n  %{RPM_NAME}-firmware
%{FIRMWARE_DESCRIPTION}

%files -n %{RPM_NAME}-firmware
%defattr(644,root,root,755)
%{FIRMWARE_FILES}

%{FIRMWARE_END}

%post
modules=( $(find /lib/modules/%{kmod_kernel_version}.%(arch)/extra/kmod-%{kmod_vendor}-%{kmod_name} | grep '\.ko$') )
if [ -x "/sbin/weak-modules" ]; then
    printf '%s\n' "${modules[@]}" \
    | /sbin/weak-modules --add-modules
fi

%preun
rpm -ql %{RPM_NAME}-%{kmod_driver_version}-%{kmod_rpm_release}%{?dist}.$(arch) | grep '\.ko$' > /var/run/rpm-kmod-%{kmod_name}-modules

%postun
modules=( $(cat /var/run/rpm-kmod-%{kmod_name}-modules) )
rm /var/run/rpm-kmod-%{kmod_name}-modules
if [ -x "/sbin/weak-modules" ]; then
    printf '%s\n' "${modules[@]}" \
    | /sbin/weak-modules --remove-modules
fi

%files
%defattr(644,root,root,755)
/lib/modules/%{kmod_kernel_version}.%(arch)
/etc/depmod.d/%{MODULE_NAME}.conf
/usr/share/doc/kmod-%{MODULE_NAME}/greylist.txt

%prep
%setup -n %{MODULE_NAME}-%{MODULE_VENDOR}-%{MODULE_VERSION}
%{SOURCE_PATCHES_DO}
set -- *
mkdir source
mv "$@" source/
mkdir obj

%build
rm -rf obj
cp -r source obj
make -C %{kernel_source} M=$PWD/obj/%{kmod_kbuild_dir} \
	NOSTDINC_FLAGS="-I $PWD/obj/include"
# mark modules executable so that strip-to-file can strip them
find obj/%{kmod_kbuild_dir} -name "*.ko" -type f -exec chmod u+x '{}' +

whitelist="/lib/modules/kabi-current/kabi_whitelist_%{_target_cpu}"
for modules in $( find obj/%{kmod_kbuild_dir} -name "*.ko" -type f -printf "%{findpat}\n" | sed 's|\.ko$||' | sort -u ) ; do
	# update depmod.conf
	echo "override $(echo $modules | sed 's/.*\///') $(echo %{kmod_kernel_version} | sed 's/\.[^\.]*$//').* weak-updates/$modules" >> source/depmod.conf

	# update greylist
	nm -u obj/%{kmod_kbuild_dir}/$modules.ko | sed 's/.*U //' |  sed 's/^\.//' | sort -u | while read -r symbol; do
		grep -q "^\s*$symbol\$" $whitelist || echo "$symbol" >> source/greylist
	done
done
sort -u source/greylist | uniq > source/greylist.txt

%install
export INSTALL_MOD_PATH=$RPM_BUILD_ROOT
export INSTALL_MOD_DIR=extra/%{name}
make -C %{kernel_source} modules_install \
	M=$PWD/obj/%{kmod_kbuild_dir}
# Cleanup unnecessary kernel-generated module dependency files.
find $INSTALL_MOD_PATH/lib/modules -iname 'modules.*' -exec rm {} \;

install -m 644 -D source/depmod.conf $RPM_BUILD_ROOT/etc/depmod.d/%{kmod_name}.conf
install -m 644 -D source/greylist.txt $RPM_BUILD_ROOT/usr/share/doc/kmod-%{kmod_name}/greylist.txt
%{FIRMWARE_BEGIN}
%{FIRMWARE_FILES_INSTALL}
%{FIRMWARE_END}
%clean
rm -rf $RPM_BUILD_ROOT

%changelog
* %{DATE} %{MODULE_AUTHOR} <%{MODULE_AUTHOR_EMAIL}> %{MODULE_VERSION}
- %{GIT_HASH}
- %{SUMMARY}
